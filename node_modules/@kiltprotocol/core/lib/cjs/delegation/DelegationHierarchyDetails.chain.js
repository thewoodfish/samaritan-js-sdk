"use strict";
/**
 * Copyright (c) 2018-2022, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetch = void 0;
const config_1 = require("@kiltprotocol/config");
const utils_1 = require("@kiltprotocol/utils");
const DelegationDecoder_js_1 = require("./DelegationDecoder.js");
/**
 * Fetch a delegation hierarchy node from the blockchain given its identifier.
 *
 * @param rootId The root delegation node ID to fetch.
 * @returns The retrieved [[IDelegationHierarchyDetails]].
 */
async function fetch(rootId) {
    const api = config_1.ConfigService.get('api');
    const chain = await api.query.delegation.delegationHierarchies(rootId);
    if (chain.isNone) {
        throw new utils_1.SDKErrors.HierarchyQueryError(rootId);
    }
    return {
        ...(0, DelegationDecoder_js_1.delegationHierarchyDetailsFromChain)(chain),
        id: rootId,
    };
}
exports.fetch = fetch;
