"use strict";
/**
 * Copyright (c) 2018-2022, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getService = exports.getKey = exports.getKeys = void 0;
/**
 * Gets all public keys associated with this DID.
 *
 * @param did The DID data.
 * @returns Array of public keys.
 */
function getKeys(did) {
    return [
        ...did.authentication,
        ...(did.assertionMethod || []),
        ...(did.capabilityDelegation || []),
        ...(did.keyAgreement || []),
    ];
}
exports.getKeys = getKeys;
/**
 * Returns a key with a given id, if associated with this DID.
 *
 * @param did The DID data.
 * @param id Key id (not the full key uri).
 * @returns The respective public key data or undefined.
 */
function getKey(did, id) {
    return getKeys(did).find((key) => key.id === id);
}
exports.getKey = getKey;
/**
 * Returns a service endpoint with a given id, if associated with this DID.
 *
 * @param did The DID data.
 * @param id Endpoint id (not the full endpoint uri).
 * @returns The respective endpoint data or undefined.
 */
function getService(did, id) {
    return did.service?.find((endpoint) => endpoint.id === id);
}
exports.getService = getService;
