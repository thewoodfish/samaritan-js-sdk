/**
 * Copyright (c) 2018-2022, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
import type { KiltAddress } from '@kiltprotocol/types';
/**
 * Verifies a given address string against the External Address Format (SS58) with our Prefix of 38.
 *
 * @param input Address string to validate for correct Format.
 */
export declare function verifyKiltAddress(input: unknown): void;
/**
 * Type guard to check whether input is an SS58 address with our prefix of 38.
 *
 * @param input Address string to validate for correct format.
 * @returns True if input is a KiltAddress, false otherwise.
 */
export declare function isKiltAddress(input: unknown): input is KiltAddress;
export { isHex } from '@polkadot/util';
/**
 * Validates the format of a hex string via regex.
 *
 * @param input Hex string to validate for correct format.
 * @param bitLength Expected length of hex in bits.
 */
export declare function verifyIsHex(input: unknown, bitLength?: number): void;
