/**
 * Copyright (c) 2018-2022, BOTLabs GmbH.
 *
 * This source code is licensed under the BSD 4-Clause "Original" license
 * found in the LICENSE file in the root directory of this source tree.
 */
import type { DidKey, DidResolutionResult, DidResourceUri, DidUri, KeyRelationship, ResolvedDidKey, ResolvedDidServiceEndpoint } from '@kiltprotocol/types';
/**
 * Resolve a DID URI to the DID document and its metadata.
 *
 * The URI can also identify a key or a service, but it will be ignored during resolution.
 *
 * @param did The subject's DID.
 * @returns The details associated with the DID subject.
 */
export declare function resolve(did: DidUri): Promise<DidResolutionResult | null>;
/**
 * Converts the DID key in the format returned by `resolveKey()`, useful for own implementations of `resolveKey`.
 *
 * @param key The DID key in the SDK format.
 * @param did The DID the key belongs to.
 * @returns The key in the resolveKey-format.
 */
export declare function keyToResolvedKey(key: DidKey, did: DidUri): ResolvedDidKey;
/**
 * Converts the DID key returned by the `resolveKey()` into the format used in the SDK.
 *
 * @param key The key in the resolveKey-format.
 * @returns The key in the SDK format.
 */
export declare function resolvedKeyToKey(key: ResolvedDidKey): DidKey;
/**
 * Resolve a DID key URI to the key details.
 *
 * @param keyUri The DID key URI.
 * @param expectedVerificationMethod Optional key relationship the key has to belong to.
 * @returns The details associated with the key.
 */
export declare function resolveKey(keyUri: DidResourceUri, expectedVerificationMethod?: KeyRelationship): Promise<ResolvedDidKey>;
/**
 * Resolve a DID service URI to the service details.
 *
 * @param serviceUri The DID service URI.
 * @returns The details associated with the service endpoint.
 */
export declare function resolveService(serviceUri: DidResourceUri): Promise<ResolvedDidServiceEndpoint>;
